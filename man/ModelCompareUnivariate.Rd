% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ModelCompareUnivariate.R
\name{ModelCompareUnivariate}
\alias{ModelCompareUnivariate}
\title{R6 class ModelCompareUnivariate}
\description{
R6 class ModelCompareUnivariate

R6 class ModelCompareUnivariate
}
\examples{
library(tswge)
data("airlog")

# Woodward Gray Airline Model
phi_wg = c(-0.36, -0.05, -0.14, -0.11, 0.04, 0.09, -0.02, 0.02, 0.17, 0.03, -0.10, -0.38)
d_wg = 1
s_wg = 12

# Parzen Model
phi_pz = c(0.74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.38, -0.2812)
s_pz = 12

# Box Model
d_bx = 1
s_bx = 12  
theta_bx =  c(0.40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.60, -0.24)

models = list("Woodward Gray Model A" = list(phi = phi_wg, d = d_wg, s = s_wg, sliding_ase = FALSE),
              "Woodward Gray Model B" = list(phi = phi_wg, d = d_wg, s = s_wg, sliding_ase = TRUE),
              "Parzen Model A" = list(phi = phi_pz, s = s_pz, sliding_ase = FALSE),
              "Parzen Model B" = list(phi = phi_pz, s = s_pz, sliding_ase = TRUE),
              "Box Model A" = list(theta = theta_bx, d = d_bx, s = s_bx, sliding_ase = FALSE),
              "Box Model B" = list(theta = theta_bx, d = d_bx, s = s_bx, sliding_ase = TRUE)
              )
              
mdl_compare = ModelCompareUnivariate$new(x = airlog, mdl_list = models,
                                         n.ahead = 36, batch_size = 72)
# Plots the historgam of the ASE values for each model.
# This is especially useful when models using a sliding window for ASE calculations. 
mdl_compare$plot_histogram_ases()

# The following method gives 2 plots
# (1) Plots the forecasts for each model along with the realization.
# (2) Plots the upper and lower limits for each model along with the realization.
# In both cases, this marks each batch using a background color for ease of comparison.
# only_sliding = TRUE will only plot forecsts for models using sliding ASE  calculations.
mdl_compare$plot_batch_forecasts(only_sliding = TRUE)

# This method statistically compares all the models that use a sliding window ASE calculation
mdl_compare$statistical_compare()  

ASEs = mdl_compare$get_tabular_metrics(ases = TRUE)
print(ASEs)

# This method returns the metrics (ASE values) or forecasts for each model
# 'only_sliding' If set to TRUE, only the models that use a sliding window 
#                ASE calculation will be returned
# 'ases' If set to TRUE, this method will return the ASE value(s) 
#        Single value for models that don't use sliding ASEs and 
#        Multiple values (one per batch) for models that use sliding window
#        ASE calculations
#        If set to FALSE, this function will return the model forecasts and 
#        upper and lower confidence intervals. 
forecasts = mdl_compare$get_tabular_metrics(ases = FALSE)
print(forecasts)

}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ModelCompareUnivariate$new()}}
\item \href{#method-get_x}{\code{ModelCompareUnivariate$get_x()}}
\item \href{#method-get_batch_size}{\code{ModelCompareUnivariate$get_batch_size()}}
\item \href{#method-get_n.ahead}{\code{ModelCompareUnivariate$get_n.ahead()}}
\item \href{#method-add_models}{\code{ModelCompareUnivariate$add_models()}}
\item \href{#method-compute_metrics}{\code{ModelCompareUnivariate$compute_metrics()}}
\item \href{#method-plot_simple_forecasts}{\code{ModelCompareUnivariate$plot_simple_forecasts()}}
\item \href{#method-plot_batch_forecasts}{\code{ModelCompareUnivariate$plot_batch_forecasts()}}
\item \href{#method-plot_batch_ases}{\code{ModelCompareUnivariate$plot_batch_ases()}}
\item \href{#method-plot_histogram_ases}{\code{ModelCompareUnivariate$plot_histogram_ases()}}
\item \href{#method-plot_multiple_realizations}{\code{ModelCompareUnivariate$plot_multiple_realizations()}}
\item \href{#method-evaluate_residuals}{\code{ModelCompareUnivariate$evaluate_residuals()}}
\item \href{#method-statistical_compare}{\code{ModelCompareUnivariate$statistical_compare()}}
\item \href{#method-get_tabular_metrics}{\code{ModelCompareUnivariate$get_tabular_metrics()}}
\item \href{#method-clone}{\code{ModelCompareUnivariate$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize an object to compare several Univatiate Time Series Models
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCompareUnivariate$new(
  x = NA,
  mdl_list,
  n.ahead = NA,
  batch_size = NA,
  step_n.ahead = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{Time Series Realization}

\item{\code{mdl_list}}{A names list of all models (see format below)}

\item{\code{n.ahead}}{The number of observations used to calculate ASE or forecast ahead}

\item{\code{batch_size}}{If any of the models used sliding ase method,
then this number indicates the batch size to use}

\item{\code{step_n.ahead}}{If using sliding window, should batches be incremented by n.ahead
(Default = TRUE)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `ModelCompareUnivariate` object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_x"></a>}}
\if{latex}{\out{\hypertarget{method-get_x}{}}}
\subsection{Method \code{get_x()}}{
Returns the time series realization
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCompareUnivariate$get_x()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The Time Series Realization
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_batch_size"></a>}}
\if{latex}{\out{\hypertarget{method-get_batch_size}{}}}
\subsection{Method \code{get_batch_size()}}{
Returns the batch size value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCompareUnivariate$get_batch_size()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The Batch Size Value
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_n.ahead"></a>}}
\if{latex}{\out{\hypertarget{method-get_n.ahead}{}}}
\subsection{Method \code{get_n.ahead()}}{
Returns the n.ahead value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCompareUnivariate$get_n.ahead()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The n.ahead value
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_models"></a>}}
\if{latex}{\out{\hypertarget{method-add_models}{}}}
\subsection{Method \code{add_models()}}{
Add models to the existing object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCompareUnivariate$add_models(mdl_list)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{mdl_list}}{The list of new models to add}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-compute_metrics"></a>}}
\if{latex}{\out{\hypertarget{method-compute_metrics}{}}}
\subsection{Method \code{compute_metrics()}}{
Computes the Metrics for the models
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCompareUnivariate$compute_metrics(step_n.ahead = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{step_n.ahead}}{If TRUE, for rolling window calculations, the step size 
will be equal to n.ahead, else it will be equal to 1}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plot_simple_forecasts"></a>}}
\if{latex}{\out{\hypertarget{method-plot_simple_forecasts}{}}}
\subsection{Method \code{plot_simple_forecasts()}}{
Plots the simple forecast for each model
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCompareUnivariate$plot_simple_forecasts(lastn = FALSE, limits = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{lastn}}{If TRUE, this will plot the forecasts forthe last n.ahead values of the realization (Default: FALSE)}

\item{\code{limits}}{If TRUE, this will also plot the lower and upper limits of the forecasts (Default: FALSE)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plot_batch_forecasts"></a>}}
\if{latex}{\out{\hypertarget{method-plot_batch_forecasts}{}}}
\subsection{Method \code{plot_batch_forecasts()}}{
Plots the forecasts per batch for all models
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCompareUnivariate$plot_batch_forecasts(only_sliding = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{only_sliding}}{If TRUE, this will only plot the batch forecasts 
for the models that used window ASE calculations}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plot_batch_ases"></a>}}
\if{latex}{\out{\hypertarget{method-plot_batch_ases}{}}}
\subsection{Method \code{plot_batch_ases()}}{
Plots the ASEs per batch for all models
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCompareUnivariate$plot_batch_ases(only_sliding = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{only_sliding}}{If TRUE, this will only plot the ASEs for
the models that used window ASE calculations}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plot_histogram_ases"></a>}}
\if{latex}{\out{\hypertarget{method-plot_histogram_ases}{}}}
\subsection{Method \code{plot_histogram_ases()}}{
Plots the histogram of the ASE values for the models
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCompareUnivariate$plot_histogram_ases()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plot_multiple_realizations"></a>}}
\if{latex}{\out{\hypertarget{method-plot_multiple_realizations}{}}}
\subsection{Method \code{plot_multiple_realizations()}}{
Creates multiple realization of each model. Useful to check model appropriateness.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCompareUnivariate$plot_multiple_realizations(
  n.realizations = 4,
  lag.max = 25,
  seed = NA,
  plot = c("all"),
  scales = "free_y"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n.realizations}}{Number of realization to create (Default: 4)}

\item{\code{lag.max}}{lag.max to plot for ACF (Default: 25)}

\item{\code{seed}}{The seed to use for generating realizations}

\item{\code{plot}}{A vector of options to plot (Default = c("all"))
Other options: 'realization', 'acf', 'spectrum'}

\item{\code{scales}}{The scales argument to be passed to ggplot facet_wrap layer
(Default = 'free_y') Other appropriate options: 'fixed'}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-evaluate_residuals"></a>}}
\if{latex}{\out{\hypertarget{method-evaluate_residuals}{}}}
\subsection{Method \code{evaluate_residuals()}}{
For the models for which the residuals have been provided,
this method will check whetehr the residuals are white noise or not.
(1) Plots the residuals and the ACF values
(2) Performs the Ljung-Box test for K = 24 and K = 48
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCompareUnivariate$evaluate_residuals(lag.max = 50)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{lag.max}}{The maximum lag to plot for the ACF}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A dataframe containing the results of the 2 Ljung-Box tests
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-statistical_compare"></a>}}
\if{latex}{\out{\hypertarget{method-statistical_compare}{}}}
\subsection{Method \code{statistical_compare()}}{
Statistically compares the ASE values of the models using 
ANOVA and Tukey Adjustment for multiple comparison
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCompareUnivariate$statistical_compare()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The results of the ANOVA test
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_tabular_metrics"></a>}}
\if{latex}{\out{\hypertarget{method-get_tabular_metrics}{}}}
\subsection{Method \code{get_tabular_metrics()}}{
Gets the metrics and results in tabular format
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCompareUnivariate$get_tabular_metrics(only_sliding = FALSE, ases = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{only_sliding}}{If TRUE, this will only get results for models that use a 
sliding ASE calculation method. (Default: FALSE)}

\item{\code{ases}}{If TRUE returns the ASE values for each batch. If FALSE returns the 
forecasts, and the lower and upper limits asscoiated with the forecasts}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCompareUnivariate$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
